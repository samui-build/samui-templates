name: Test Templates

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  get-templates:
    runs-on: ubuntu-latest
    outputs:
      templates: ${{ steps.set-templates.outputs.templates }}
    steps:
      - uses: actions/checkout@v4
      - id: set-templates
        run: |
          TEMPLATES=$(find experimental templates -maxdepth 1 -mindepth 1 -type d | sort | jq -R -s -c 'split("\n")[:-1]')
          echo "templates=$TEMPLATES" >> $GITHUB_OUTPUT

  test:
    needs: get-templates
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 20, 22 ]
        pm: [ npm, pnpm, yarn ]
        template: ${{ fromJson(needs.get-templates.outputs.templates) }}
    steps:
      - name: Setup Anchor
        uses: metadaoproject/setup-anchor@v3.1
        with:
          anchor-version: '0.30.1'
          solana-cli-version: '2.0.21'
          node-version: ${{ matrix.node }}

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git identity
        run: |
          git config --global user.email "ci-bot@example.com"
          git config --global user.name "CI Bot"

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install package manager (if needed)
        run: |
          case ${{ matrix.pm }} in
            npm) echo "Using npm";;
            pnpm) npm install -g pnpm;;
            yarn) npm install -g yarn;;
          esac

      - name: Create and Build using create-solana-dapp
        run: |
          TEMP_DIR=$(mktemp -d)
          cd "$TEMP_DIR"

          BRANCH=${GITHUB_REF#refs/heads/}

          case ${{ matrix.pm }} in
          npm) npx create-solana-dapp@next --verbose --template gh:${{ github.repository }}/${{ matrix.template }}#${BRANCH} sandbox ;;
          pnpm) pnpx create-solana-dapp@next --verbose --template gh:${{ github.repository }}/${{ matrix.template }}#${BRANCH} sandbox ;;
          yarn) yarn create solana-dapp --template gh:${{ github.repository }}/${{ matrix.template }}#${BRANCH} sandbox ;;
          esac

          cd sandbox
          ${{ matrix.pm }} install
          ${{ matrix.pm }} run ci
